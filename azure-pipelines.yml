trigger:
  branches:
    include:
    - main
  paths:
    include:
    - api
    - iac
    exclude:
    - '*.md'

pool: 
  vmImage: ubuntu-latest

parameters:
  - name: appName
    type: string
    displayName: 'Application Name'
    default: 'snyk-notify'
  - name: env
    type: string
    displayName: 'Environment for deployment e.g. dev, test, prod'
    default: 'dev'
  - name: location
    type: string
    displayName: 'Azure Resouce Location'
    default: 'westeurope'
  - name: tags
    type: object
    displayName: 'Resource Tags to Use'
    default:
      purpose: 'Snyk Func'
  - name: subscription
    type: string
    displayName: 'Azure Subscription Name'
    default: '$(azureSubscription)'
  - name: projectName
    type: string
    displayName: 'Azure DevOps Project Name'
    default: '$(DevOpsProjectName)'
  - name: accountName
    type: string
    displayName: 'Azure DevOps Org Name'
    default: '$(DevOpsOrgName)'
  - name: snykSeverity
    type: string
    displayName: 'Issue Severity Level'
    default: 'low'
    values: ['low','medium','high','critical']

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  funcArchiveName: 'func$(Build.BuildId).zip'
  resourceGroupName: 'rg-${{ parameters.appName }}-${{ parameters.env }}-${{ parameters.location }}'

jobs:
- job: deploy
  displayName: 'Deploy Snyk Logic App'
  condition: eq(variables.isMain, 'true')
  steps:
  - task: NodeTool@0 
    displayName: 'Install Node'
    inputs:
      versionSpec: '16.x'
  - bash: |
      npm install 
      npm run build --if-present
    workingDirectory: ./api
    displayName: 'Install dependencies'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: './api'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(funcArchiveName)'
  - template: func-params.yml
    parameters:
      env: ${{ parameters.env }}
      appName: ${{ parameters.appName }}
      location: ${{ parameters.location }}
      tags: ${{ parameters.tags }}
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy Function Infrastructure'
    inputs: 
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: ${{ parameters.subscription }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: $(resourceGroupName)
      location: ${{ parameters.location }}
      templateLocation: 'Linked artifact'
      csmFile: 'iac/deploy_func.bicep'
      csmParametersFile: './iac/deploy_func.parameters.json'
      deploymentMode: 'Incremental'
      deploymentName: 'func-deploy'
  - task: AzureCLI@2
    displayName: 'Get Deploy outputs'
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      scriptType: bash 
      scriptLocation: inlineScript
      inlineScript: |
        outputs=$(az deployment group show -g $(resourceGroupName) -n "func-deploy" --query properties.outputs)
        functionName=$(echo $outputs | jq '.functionName.value' -r)
        functionId=$(echo $outputs | jq '.functionId.value' -r)
        echo "##vso[task.setvariable variable=FunctionName]$functionName"
        echo "##vso[task.setvariable variable=FunctionId]$functionId"
  - task: AzureFunctionApp@1
    displayName: 'Deploy Function'
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      appType: 'functionAppLinux'
      appName: $(functionName)
      package: '$(Build.ArtifactStagingDirectory)/$(funcArchiveName)'
      startUpCommand: 'func azure functionapp publish $(functionName) --no-bundler'
  - template: logic-params.yml
    parameters:
      env: ${{ parameters.env }}
      appName: ${{ parameters.appName }}
      location: ${{ parameters.location }}
      tags: ${{ parameters.tags }}
      projectName: ${{ parameters.projectName }}
      account: ${{ parameters.accountName }}
      snykWebhookSecret: $(snykWebhookSecret)
      snykOrgId: $(snykOrgId) 
      snykApiToken: $(snykApiToken)
      snykSeverity: ${{ parameters.snykSeverity }}
      functionId: $(functionId)/functions/ValidateRequest
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy Logic App'
    inputs: 
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: ${{ parameters.subscription }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: $(resourceGroupName)
      location: ${{ parameters.location }}
      templateLocation: 'Linked artifact'
      csmFile: 'iac/deploy_logic.bicep'
      csmParametersFile: './iac/deploy_logic.parameters.json'
      deploymentMode: 'Incremental'
      deploymentName: 'app-deploy'
